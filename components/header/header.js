import React, { useState, useEffect } from 'react';
import { useRouter } from "next/router";

import { Typography, Switch, Button, SvgIcon, Badge, IconButton, Menu, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core';
import { withStyles, withTheme } from '@material-ui/core/styles';
import HelpIcon from '@material-ui/icons/Help';
import ListIcon from '@material-ui/icons/List';
import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';
import AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';
import DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';

import Navigation from '../navigation'
import Unlock from '../unlock';
import TransactionQueue from '../transactionQueue';

import { ACTIONS } from '../../stores/constants';

import stores from '../../stores';
import { formatAddress } from '../../utils';

import classes from './header.module.css';

function SiteLogo(props) {
  const { color, className } = props;
  return (
    <SvgIcon viewBox="0 0 147.7 17.5" className={className}>
      <g>
      <path fill="#000000" opacity="1.000000" stroke="none" 
	d="
M304.000000,208.000000 
	C202.666687,208.000000 101.833366,208.000000 1.000041,208.000000 
	C1.000027,139.000031 1.000027,70.000061 1.000014,1.000068 
	C166.333267,1.000046 331.666534,1.000046 496.999878,1.000023 
	C496.999908,69.999931 496.999908,138.999863 496.999939,207.999893 
	C432.833344,208.000000 368.666656,208.000000 304.000000,208.000000 
M208.590881,168.945923 
	C208.764053,168.665314 208.937210,168.384720 209.764755,167.805527 
	C210.870667,164.899246 211.976578,161.992950 213.828018,158.623581 
	C213.885590,154.852051 214.084686,151.075989 213.964035,147.310165 
	C213.821091,142.848480 213.402573,138.395645 213.023956,133.078186 
	C212.941498,131.066895 212.859039,129.055603 212.894775,126.511673 
	C212.943130,126.336357 212.991501,126.161034 213.680130,125.699791 
	C214.123123,124.814430 214.535583,123.912224 215.013687,123.046242 
	C222.697418,109.128838 221.723099,95.460060 214.013779,81.885239 
	C209.430008,73.813972 201.766357,69.705498 193.507919,65.186096 
	C191.591644,58.064796 187.445084,52.276714 181.078979,48.952240 
	C176.378372,46.497520 170.844177,44.859119 165.572128,44.510845 
	C160.853516,44.199131 155.985519,46.148510 150.563019,46.763050 
	C147.451492,43.858368 144.669373,40.459202 141.174011,38.130711 
	C121.200340,24.824970 99.049767,30.345364 84.350296,48.178802 
	C78.090408,55.773323 70.299889,60.444374 60.736534,61.815014 
	C52.180653,63.041271 43.670429,64.122704 36.203114,68.895195 
	C24.274326,76.519104 17.262487,86.851807 16.844090,101.572105 
	C16.590347,110.499397 18.819698,118.388145 23.001326,126.889023 
	C22.950092,131.702164 22.841471,136.515549 22.861540,141.328384 
	C22.889277,147.980484 22.134869,154.810928 23.437046,161.214920 
	C24.181332,164.875259 28.341614,167.840973 31.232054,171.790726 
	C32.316673,172.155594 33.401295,172.520447 34.502556,172.957504 
	C34.502556,172.957504 34.555538,172.905731 35.017063,173.524628 
	C35.990986,173.703842 36.964905,173.883072 38.365898,174.830688 
	C74.235634,174.835312 110.105362,174.839935 146.903290,175.005798 
	C162.967575,175.009079 179.037140,175.228928 195.091873,174.839096 
	C198.438171,174.757843 201.729721,172.422104 205.668427,171.020752 
	C206.146011,170.715393 206.623581,170.410034 207.585434,169.948685 
	C207.760056,169.666977 207.934677,169.385269 208.590881,168.945923 
M338.023376,139.025513 
	C338.023376,139.025513 338.036560,138.980911 338.613068,138.794891 
	C339.741455,139.559128 340.869812,140.323364 342.011444,141.894913 
	C341.896973,145.198395 344.228790,145.065109 346.437256,144.980591 
	C348.821350,144.889313 351.763916,145.602585 351.784454,140.860611 
	C351.521179,128.912918 351.257874,116.965218 350.893616,104.291199 
	C347.868652,95.130371 340.823853,90.403206 333.017273,94.600601 
	C334.828033,95.330925 336.638794,96.061249 339.196899,97.092995 
	C336.844360,98.503105 335.843231,99.103180 335.860168,99.093033 
	C337.623749,102.127632 340.831604,105.215370 340.348938,107.535278 
	C339.910431,109.643005 335.648346,111.547928 332.735352,112.426384 
	C326.415131,114.332359 319.792938,115.232689 313.463196,117.113045 
	C309.244080,118.366425 306.822723,121.673080 306.978821,126.528046 
	C308.558319,125.467560 309.703125,124.038391 310.951782,122.706566 
	C312.036865,121.549225 313.096497,120.235573 314.446594,119.511719 
	C315.188507,119.113930 316.506897,119.791351 317.565369,119.983986 
	C317.225555,120.957726 317.155914,122.197281 316.501953,122.861961 
	C312.349609,127.082405 313.055603,135.414627 318.017761,138.227341 
	C318.890991,138.722305 320.153900,138.529770 322.652527,138.818115 
	C320.826843,137.134262 319.919037,136.693954 319.701721,136.028244 
	C318.725677,133.038406 317.053070,129.867050 317.430603,126.997864 
	C317.656464,125.281212 321.011139,123.475288 323.298950,122.645264 
	C326.966736,121.314568 330.980743,120.965714 334.719604,119.791718 
	C336.607666,119.198868 338.977203,118.107819 339.799622,116.543228 
	C342.045227,112.271210 345.509338,108.090103 343.140594,102.575722 
	C342.902008,102.020287 343.798096,100.977455 344.268646,99.937546 
	C345.156830,100.479309 346.121735,100.753380 346.174469,101.148987 
	C346.667633,104.850281 347.362000,108.578545 347.298309,112.286972 
	C347.214081,117.188179 346.085968,122.092896 346.254333,126.966835 
	C346.325287,129.021881 348.559906,131.002213 349.926605,133.668152 
	C349.897247,134.106812 349.867889,134.545471 349.188171,135.201553 
	C347.544464,137.757523 345.620697,139.787689 342.053436,138.183151 
	C341.712402,136.403275 341.371368,134.623413 341.343567,132.206665 
	C344.012512,122.449165 344.031006,120.481575 341.005402,118.834427 
	C341.005402,121.031685 341.005402,122.982193 340.573395,125.200851 
	C340.378998,125.474014 340.184570,125.747169 339.887390,126.716988 
	C337.740936,133.184982 332.130829,135.576447 327.068451,137.421051 
	C327.068451,140.121582 327.068451,142.213547 327.068451,145.168884 
	C330.466919,143.399979 333.722107,141.705643 337.417999,139.808197 
	C337.700897,139.621353 337.887756,139.364609 338.023376,139.025513 
M238.205292,76.391388 
	C238.205292,79.131348 238.205292,81.871300 238.205292,85.047829 
	C240.298447,85.047829 242.237823,85.047829 244.504547,85.036041 
	C244.504547,85.036041 244.824509,84.965950 245.268250,85.742821 
	C250.483963,85.742821 255.699677,85.742821 261.003265,85.742821 
	C261.003265,104.310150 260.981262,121.891350 261.042664,139.472260 
	C261.047882,140.969437 261.609436,142.464661 262.660126,144.290390 
	C266.116028,144.189713 269.571899,144.089035 273.821777,143.618195 
	C273.821777,124.445175 273.821777,105.272163 273.821777,85.999474 
	C276.549683,85.999474 278.379608,86.103226 280.193787,85.978256 
	C284.189728,85.702995 288.177765,85.312317 292.957550,85.031815 
	C297.734619,83.926849 298.538544,80.358009 294.639709,75.180275 
	C276.887115,75.119423 259.134491,75.044655 241.381897,75.042145 
	C240.564102,75.042030 239.746231,75.690498 238.975998,76.043022 
	C238.975998,76.043022 238.961319,75.997322 238.205292,76.391388 
M472.296783,108.442657 
	C466.146210,88.532967 438.871246,87.063560 427.936920,98.468452 
	C419.399170,107.373642 418.151672,124.605362 425.425964,136.137772 
	C431.117828,145.161453 447.504730,149.224289 458.630737,144.092590 
	C461.564850,142.739288 464.529785,140.855408 466.668945,138.483246 
	C474.333862,129.983337 475.688599,119.987785 472.296783,108.442657 
M372.486694,142.433899 
	C377.372711,145.840164 382.877655,146.382614 388.614258,145.997635 
	C398.886566,145.308258 407.655121,142.240356 410.857574,131.177429 
	C411.472992,129.051453 411.562103,125.417091 410.315796,124.385796 
	C407.579437,122.121460 402.270508,124.331238 400.941406,127.503265 
	C397.972443,134.588913 392.928772,137.492264 384.600159,136.909958 
	C377.424377,136.408249 374.562653,133.909760 372.867432,125.727882 
	C372.136505,122.200073 371.793732,118.423340 372.203522,114.866707 
	C372.837921,109.359909 373.725342,103.711861 380.313995,101.539543 
	C390.365082,98.225639 396.539459,100.693207 401.250610,110.356323 
	C403.330505,114.622437 406.976898,113.012245 409.951141,112.448196 
	C410.664429,112.312920 411.428223,108.505798 410.943573,106.719902 
	C409.404663,101.049423 405.897095,96.938782 400.479614,94.095940 
	C395.442169,91.452499 390.360840,92.033058 385.086792,91.764969 
	C378.569824,91.433678 373.299896,93.439423 368.826752,97.673157 
	C359.584991,106.420288 359.668365,117.489182 362.151764,128.720200 
	C363.409515,134.408356 366.244019,139.533264 372.486694,142.433899 
M329.307312,97.988037 
	C327.974487,97.191528 326.641632,96.395027 325.308807,95.598511 
	C326.865112,94.299431 328.421417,93.000351 329.898163,91.767685 
	C320.318359,89.083069 309.670746,94.787163 307.531158,104.201355 
	C307.145813,105.896759 308.277802,109.556602 308.737946,109.561424 
	C311.697449,109.592354 316.743500,109.641541 317.271484,108.240410 
	C319.606812,102.043060 323.783234,99.898674 329.824371,99.858360 
	C329.888794,99.857925 329.945435,98.687561 329.307312,97.988037 
M309.465393,133.274765 
	C308.636292,132.644043 307.807190,132.013321 306.738495,131.200363 
	C304.742279,136.478699 307.344360,140.201004 310.527649,142.482422 
	C314.241364,145.144028 318.979370,146.441574 325.131256,143.166641 
	C321.596222,142.063904 319.388214,141.075592 317.082855,140.721832 
	C312.987457,140.093369 310.501892,138.030899 309.465393,133.274765 
z"/>
<path fill="#4B901F" opacity="1.000000" stroke="none" 
	d="
M23.121332,125.941841 
	C18.819698,118.388145 16.590347,110.499397 16.844090,101.572105 
	C17.262487,86.851807 24.274326,76.519104 36.203114,68.895195 
	C43.670429,64.122704 52.180653,63.041271 60.736534,61.815014 
	C70.299889,60.444374 78.090408,55.773323 84.350296,48.178802 
	C99.049767,30.345364 121.200340,24.824970 141.174011,38.130711 
	C144.669373,40.459202 147.451492,43.858368 150.698410,47.228451 
	C148.054016,51.008766 145.274231,54.323681 142.110901,57.613880 
	C118.633949,55.730148 98.367943,62.588184 80.319069,77.283653 
	C72.383430,74.130913 64.793655,73.890030 57.242722,77.204620 
	C47.352436,81.546089 41.112663,88.963745 40.130402,99.795853 
	C39.003689,112.220840 43.086494,122.393738 54.897610,128.781479 
	C54.783878,134.112366 54.677517,138.997498 54.203461,143.877487 
	C48.578270,142.291107 43.320770,140.709854 37.834259,138.876770 
	C33.662994,135.464859 29.720739,132.304749 25.664330,128.843475 
	C24.740562,127.675476 23.930946,126.808662 23.121332,125.941841 
z"/>
<path fill="#050711" opacity="1.000000" stroke="none" 
	d="
M472.434998,108.820755 
	C475.688599,119.987785 474.333862,129.983337 466.668945,138.483246 
	C464.529785,140.855408 461.564850,142.739288 458.630737,144.092590 
	C447.504730,149.224289 431.117828,145.161453 425.425964,136.137772 
	C418.151672,124.605362 419.399170,107.373642 427.936920,98.468452 
	C438.871246,87.063560 466.146210,88.532967 472.434998,108.820755 
M439.367279,101.582260 
	C430.514374,107.024994 428.924835,127.581856 436.838196,134.308762 
	C437.216949,134.630737 437.580078,134.987305 438.003540,135.238159 
	C447.907349,141.104752 461.486450,134.522049 462.874756,123.071983 
	C463.231842,120.126610 463.444214,116.996315 462.843933,114.135422 
	C461.378235,107.149750 458.879059,99.957031 448.828796,100.832710 
	C445.901550,101.087753 442.966064,101.247734 439.367279,101.582260 
z"/>
<path fill="#050911" opacity="1.000000" stroke="none" 
	d="
M372.277283,142.287689 
	C366.244019,139.533264 363.409515,134.408356 362.151764,128.720200 
	C359.668365,117.489182 359.584991,106.420288 368.826752,97.673157 
	C373.299896,93.439423 378.569824,91.433678 385.086792,91.764969 
	C390.360840,92.033058 395.442169,91.452499 400.479614,94.095940 
	C405.897095,96.938782 409.404663,101.049423 410.943573,106.719902 
	C411.428223,108.505798 410.664429,112.312920 409.951141,112.448196 
	C406.976898,113.012245 403.330505,114.622437 401.250610,110.356323 
	C396.539459,100.693207 390.365082,98.225639 380.313995,101.539543 
	C373.725342,103.711861 372.837921,109.359909 372.203522,114.866707 
	C371.793732,118.423340 372.136505,122.200073 372.867432,125.727882 
	C374.562653,133.909760 377.424377,136.408249 384.600159,136.909958 
	C392.928772,137.492264 397.972443,134.588913 400.941406,127.503265 
	C402.270508,124.331238 407.579437,122.121460 410.315796,124.385796 
	C411.562103,125.417091 411.472992,129.051453 410.857574,131.177429 
	C407.655121,142.240356 398.886566,145.308258 388.614258,145.997635 
	C382.877655,146.382614 377.372711,145.840164 372.277283,142.287689 
z"/>
<path fill="#070B0F" opacity="1.000000" stroke="none" 
	d="
M273.027802,143.988358 
	C269.571899,144.089035 266.116028,144.189713 262.348450,143.663071 
	C262.036743,123.655807 262.036743,104.275871 262.036743,84.965950 
	C255.787903,84.965950 250.306213,84.965950 244.824509,84.965950 
	C244.824509,84.965950 244.504547,85.036041 244.066284,84.745682 
	C242.223755,84.176689 240.819489,83.898056 238.961319,83.529373 
	C238.961319,80.889000 238.961319,78.443161 238.961319,75.997322 
	C238.961319,75.997322 238.975998,76.043022 239.425018,76.063263 
	C258.247986,76.050011 276.621948,76.016518 294.995911,75.983017 
	C298.538544,80.358009 297.734619,83.926849 292.090271,84.915382 
	C285.163208,84.798950 279.103363,84.798950 273.027802,84.798950 
	C273.027802,104.948624 273.027802,124.468491 273.027802,143.988358 
z"/>
<path fill="#ED3930" opacity="1.000000" stroke="none" 
	d="
M142.494461,57.638596 
	C145.274231,54.323681 148.054016,51.008766 151.008621,47.397064 
	C155.985519,46.148510 160.853516,44.199131 165.572128,44.510845 
	C170.844177,44.859119 176.378372,46.497520 181.078979,48.952240 
	C187.445084,52.276714 191.591644,58.064796 193.664429,65.948166 
	C193.148148,71.940208 192.475357,77.170181 191.500824,82.223892 
	C177.625214,68.601639 161.385345,60.475258 142.494461,57.638596 
z"/>
<path fill="#4D8F22" opacity="1.000000" stroke="none" 
	d="
M191.802567,82.400154 
	C192.475357,77.170181 193.148148,71.940208 193.878357,66.225983 
	C201.766357,69.705498 209.430008,73.813972 214.013779,81.885239 
	C221.723099,95.460060 222.697418,109.128838 215.013687,123.046242 
	C214.535583,123.912224 214.123123,124.814430 213.036224,125.807510 
	C211.760071,125.080772 211.127823,124.246315 210.571014,123.023376 
	C209.748001,118.627708 209.620682,114.223877 207.802780,110.689613 
	C202.851349,101.063324 197.185394,91.804550 191.802567,82.400154 
z"/>
<path fill="#F8AE32" opacity="1.000000" stroke="none" 
	d="
M25.778482,129.144653 
	C29.720739,132.304749 33.662994,135.464859 37.775726,139.324188 
	C37.956059,141.997421 37.969067,143.971390 37.975262,145.945404 
	C38.013023,157.979858 43.621246,162.904495 55.778610,161.899353 
	C57.914093,165.842560 59.973869,169.396744 61.571041,172.991211 
	C57.049255,173.339767 52.990074,173.648071 48.544079,173.926880 
	C47.123714,173.919693 46.090164,173.941986 44.730598,173.746582 
	C42.252308,173.389130 40.100029,173.249344 37.529881,173.021545 
	C36.259850,172.924240 35.407696,172.914978 34.555538,172.905731 
	C34.555538,172.905731 34.502556,172.957504 34.384697,172.591827 
	C34.171448,172.015854 34.076057,171.805557 33.879436,171.492554 
	C33.639572,171.255844 33.483269,171.147278 33.087051,170.839111 
	C32.550037,170.333450 32.235275,170.052841 31.807121,169.616974 
	C31.509455,169.270508 31.288061,169.144348 30.979393,169.072418 
	C30.929232,169.061569 30.917011,168.959671 30.815866,168.766968 
	C30.533461,168.333939 30.298653,168.170563 29.782349,167.936462 
	C29.349775,167.493149 29.145151,167.197479 28.845818,166.725922 
	C28.588297,166.330551 28.380257,166.169479 28.028133,165.820068 
	C27.897923,165.398895 27.866566,165.224487 28.049843,164.865265 
	C27.602474,164.113251 26.940474,163.546082 26.159458,162.704575 
	C25.965225,162.040344 25.890009,161.650452 25.839857,160.952454 
	C25.608229,160.114578 25.351536,159.584778 25.027460,158.586792 
	C25.232878,148.460617 25.505680,138.802628 25.778482,129.144653 
z"/>
<path fill="#04070C" opacity="1.000000" stroke="none" 
	d="
M349.811035,133.016510 
	C348.559906,131.002213 346.325287,129.021881 346.254333,126.966835 
	C346.085968,122.092896 347.214081,117.188179 347.298309,112.286972 
	C347.362000,108.578545 346.667633,104.850281 346.174469,101.148987 
	C346.121735,100.753380 345.156830,100.479309 344.268646,99.937546 
	C343.798096,100.977455 342.902008,102.020287 343.140594,102.575722 
	C345.509338,108.090103 342.045227,112.271210 339.799622,116.543228 
	C338.977203,118.107819 336.607666,119.198868 334.719604,119.791718 
	C330.980743,120.965714 326.966736,121.314568 323.298950,122.645264 
	C321.011139,123.475288 317.656464,125.281212 317.430603,126.997864 
	C317.053070,129.867050 318.725677,133.038406 319.701721,136.028244 
	C319.919037,136.693954 320.826843,137.134262 322.652527,138.818115 
	C320.153900,138.529770 318.890991,138.722305 318.017761,138.227341 
	C313.055603,135.414627 312.349609,127.082405 316.501953,122.861961 
	C317.155914,122.197281 317.225555,120.957726 317.565369,119.983986 
	C316.506897,119.791351 315.188507,119.113930 314.446594,119.511719 
	C313.096497,120.235573 312.036865,121.549225 310.951782,122.706566 
	C309.703125,124.038391 308.558319,125.467560 306.978821,126.528046 
	C306.822723,121.673080 309.244080,118.366425 313.463196,117.113045 
	C319.792938,115.232689 326.415131,114.332359 332.735352,112.426384 
	C335.648346,111.547928 339.910431,109.643005 340.348938,107.535278 
	C340.831604,105.215370 337.623749,102.127632 335.860168,99.093033 
	C335.843231,99.103180 336.844360,98.503105 339.196899,97.092995 
	C336.638794,96.061249 334.828033,95.330925 333.017273,94.600601 
	C340.823853,90.403206 347.868652,95.130371 350.548828,104.840225 
	C350.073029,114.598343 349.942047,123.807426 349.811035,133.016510 
z"/>
<path fill="#04070C" opacity="1.000000" stroke="none" 
	d="
M329.656494,98.025696 
	C329.945435,98.687561 329.888794,99.857925 329.824371,99.858360 
	C323.783234,99.898674 319.606812,102.043060 317.271484,108.240410 
	C316.743500,109.641541 311.697449,109.592354 308.737946,109.561424 
	C308.277802,109.556602 307.145813,105.896759 307.531158,104.201355 
	C309.670746,94.787163 320.318359,89.083069 329.898163,91.767685 
	C328.421417,93.000351 326.865112,94.299431 325.308807,95.598511 
	C326.641632,96.395027 327.974487,97.191528 329.656494,98.025696 
z"/>
<path fill="#D9D389" opacity="1.000000" stroke="none" 
	d="
M205.046509,171.125351 
	C201.729721,172.422104 198.438171,174.757843 195.091873,174.839096 
	C179.037140,175.228928 162.967575,175.009079 146.093933,174.703918 
	C143.467682,174.276779 141.651337,174.052200 139.833817,174.042206 
	C127.506920,173.974380 115.179756,173.951874 103.215775,173.695206 
	C105.385330,173.333191 107.191597,173.069519 108.998306,173.066498 
	C132.888641,173.026474 156.779068,173.042007 180.669403,173.000183 
	C188.895859,172.985779 197.276016,174.018036 204.978241,170.136978 
	C205.014786,170.686188 205.030655,170.905777 205.046509,171.125351 
z"/>
<path fill="#04070C" opacity="1.000000" stroke="none" 
	d="
M341.005402,124.932709 
	C341.005402,122.982193 341.005402,121.031685 341.005402,118.834427 
	C344.031006,120.481575 344.012512,122.449165 340.844635,132.641266 
	C339.575989,135.044220 338.806274,137.012573 338.036560,138.980911 
	C338.036560,138.980911 338.023376,139.025513 337.782562,139.132675 
	C337.285950,139.447510 337.097809,139.704666 336.977325,140.011307 
	C333.722107,141.705643 330.466919,143.399979 327.068451,145.168884 
	C327.068451,142.213547 327.068451,140.121582 327.068451,137.421051 
	C332.130829,135.576447 337.740936,133.184982 340.155365,126.235863 
	C340.617371,125.480728 340.811401,125.206718 341.005402,124.932709 
z"/>
<path fill="#E5EAAB" opacity="1.000000" stroke="none" 
	d="
M28.940525,166.901810 
	C29.145151,167.197479 29.349775,167.493149 29.863735,168.144196 
	C30.352587,168.763580 30.600567,168.916946 30.917011,168.959671 
	C30.917011,168.959671 30.929232,169.061569 30.957224,169.299652 
	C30.985216,169.537735 31.014624,169.995071 30.997692,170.275970 
	C30.975122,170.744400 30.969488,170.931931 30.963852,171.119446 
	C28.341614,167.840973 24.181332,164.875259 23.437046,161.214920 
	C22.134869,154.810928 22.889277,147.980484 22.861540,141.328384 
	C22.841471,136.515549 22.950092,131.702164 23.061329,126.415436 
	C23.930946,126.808662 24.740562,127.675476 25.664330,128.843475 
	C25.505680,138.802628 25.232878,148.460617 24.992437,158.889450 
	C25.288130,160.193726 25.551460,160.727127 25.814793,161.260544 
	C25.890009,161.650452 25.965225,162.040344 26.187321,162.977600 
	C26.834538,164.033325 27.334873,164.541702 27.835209,165.050079 
	C27.866566,165.224487 27.897923,165.398895 28.083420,166.022217 
	C28.409939,166.715714 28.644260,166.859268 28.940525,166.901810 
z"/>
<path fill="#E4E39C" opacity="1.000000" stroke="none" 
	d="
M102.852684,173.914734 
	C115.179756,173.951874 127.506920,173.974380 139.833817,174.042206 
	C141.651337,174.052200 143.467682,174.276779 145.629822,174.623306 
	C110.105362,174.839935 74.235634,174.835312 38.179283,174.418427 
	C37.992672,174.006165 38.046402,173.949921 38.482758,173.968689 
	C40.964951,173.979721 43.010780,173.972000 45.056614,173.964279 
	C46.090164,173.941986 47.123714,173.919693 49.018860,173.954590 
	C57.631016,173.983353 65.381577,173.954895 73.559265,173.898041 
	C76.268707,173.882355 78.551018,173.895081 81.316055,173.943298 
	C87.584274,173.960144 93.369766,173.941498 99.526337,173.895813 
	C100.882507,173.884109 101.867592,173.899429 102.852684,173.914734 
z"/>
<path fill="#04070C" opacity="1.000000" stroke="none" 
	d="
M309.613617,133.603485 
	C310.501892,138.030899 312.987457,140.093369 317.082855,140.721832 
	C319.388214,141.075592 321.596222,142.063904 325.131256,143.166641 
	C318.979370,146.441574 314.241364,145.144028 310.527649,142.482422 
	C307.344360,140.201004 304.742279,136.478699 306.738495,131.200363 
	C307.807190,132.013321 308.636292,132.644043 309.613617,133.603485 
z"/>
<path fill="#B6D5E6" opacity="1.000000" stroke="none" 
	d="
M273.424805,143.803284 
	C273.027802,124.468491 273.027802,104.948624 273.027802,84.798950 
	C279.103363,84.798950 285.163208,84.798950 291.696014,84.883842 
	C288.177765,85.312317 284.189728,85.702995 280.193787,85.978256 
	C278.379608,86.103226 276.549683,85.999474 273.821777,85.999474 
	C273.821777,105.272163 273.821777,124.445175 273.424805,143.803284 
z"/>
<path fill="#BDD6E1" opacity="1.000000" stroke="none" 
	d="
M245.046387,85.354385 
	C250.306213,84.965950 255.787903,84.965950 262.036743,84.965950 
	C262.036743,104.275871 262.036743,123.655807 261.974640,143.498260 
	C261.609436,142.464661 261.047882,140.969437 261.042664,139.472260 
	C260.981262,121.891350 261.003265,104.310150 261.003265,85.742821 
	C255.699677,85.742821 250.483963,85.742821 245.046387,85.354385 
z"/>
<path fill="#04070C" opacity="1.000000" stroke="none" 
	d="
M351.836395,141.683304 
	C351.763916,145.602585 348.821350,144.889313 346.437256,144.980591 
	C344.228790,145.065109 341.896973,145.198395 342.026855,141.132568 
	C342.083252,139.894363 342.124268,139.418518 342.165283,138.942673 
	C345.620697,139.787689 347.544464,137.757523 349.589355,135.498383 
	C350.605835,137.757904 351.221100,139.720596 351.836395,141.683304 
z"/>
<path fill="#B9D6E3" opacity="1.000000" stroke="none" 
	d="
M294.817810,75.581650 
	C276.621948,76.016518 258.247986,76.050011 239.401215,76.060204 
	C239.746231,75.690498 240.564102,75.042030 241.381897,75.042145 
	C259.134491,75.044655 276.887115,75.119423 294.817810,75.581650 
z"/>
<path fill="#C7E0C6" opacity="1.000000" stroke="none" 
	d="
M213.103500,133.938965 
	C213.402573,138.395645 213.821091,142.848480 213.964035,147.310165 
	C214.084686,151.075989 213.885590,154.852051 213.211426,158.787354 
	C212.429077,158.918610 212.263336,158.886093 212.086700,158.519852 
	C211.997589,157.744949 211.919342,157.303757 211.850220,156.402725 
	C211.882797,148.614044 211.906281,141.285217 212.223404,133.965881 
	C212.712524,133.963242 212.908020,133.951096 213.103500,133.938965 
z"/>
<path fill="#637486" opacity="1.000000" stroke="none" 
	d="
M351.810425,141.271957 
	C351.221100,139.720596 350.605835,137.757904 349.914551,135.389664 
	C349.867889,134.545471 349.897247,134.106812 349.868835,133.342331 
	C349.942047,123.807426 350.073029,114.598343 350.599304,105.203392 
	C351.257874,116.965218 351.521179,128.912918 351.810425,141.271957 
z"/>
<path fill="#D5D292" opacity="1.000000" stroke="none" 
	d="
M212.097580,158.853561 
	C212.263336,158.886093 212.429077,158.918610 212.838654,159.018890 
	C211.976578,161.992950 210.870667,164.899246 209.255264,167.809998 
	C208.745773,167.814468 208.372543,167.536026 208.480927,167.183365 
	C209.180328,164.887741 209.771347,162.944763 210.633957,160.905273 
	C211.302887,160.157028 211.700241,159.505295 212.097580,158.853561 
z"/>
<path fill="#0E1721" opacity="1.000000" stroke="none" 
	d="
M342.109375,138.562912 
	C342.124268,139.418518 342.083252,139.894363 342.020233,140.728912 
	C340.869812,140.323364 339.741455,139.559128 338.324829,138.887909 
	C338.806274,137.012573 339.575989,135.044220 340.687988,132.959717 
	C341.371368,134.623413 341.712402,136.403275 342.109375,138.562912 
z"/>
<path fill="#4B5F66" opacity="1.000000" stroke="none" 
	d="
M238.583313,76.194351 
	C238.961319,78.443161 238.961319,80.889000 238.961319,83.529373 
	C240.819489,83.898056 242.223755,84.176689 243.902618,84.751572 
	C242.237823,85.047829 240.298447,85.047829 238.205292,85.047829 
	C238.205292,81.871300 238.205292,79.131348 238.583313,76.194351 
z"/>
<path fill="#D9D389" opacity="1.000000" stroke="none" 
	d="
M210.495544,123.411865 
	C211.127823,124.246315 211.760071,125.080772 212.716095,125.950470 
	C212.991501,126.161034 212.943130,126.336357 212.631653,127.090866 
	C212.153320,128.904160 211.938110,130.138275 211.425018,131.121124 
	C210.916611,128.383865 210.706085,125.897865 210.495544,123.411865 
z"/>
<path fill="#D5D292" opacity="1.000000" stroke="none" 
	d="
M211.722885,131.372375 
	C211.938110,130.138275 212.153320,128.904160 212.572556,127.357185 
	C212.859039,129.055603 212.941498,131.066895 213.063721,133.508575 
	C212.908020,133.951096 212.712524,133.963242 212.162704,133.644592 
	C211.779861,132.666672 211.751373,132.019531 211.722885,131.372375 
z"/>
<path fill="#E4E39C" opacity="1.000000" stroke="none" 
	d="
M31.097954,171.455078 
	C30.969488,170.931931 30.975122,170.744400 31.226418,170.229706 
	C31.472076,169.902542 31.920509,169.772217 31.920509,169.772217 
	C32.235275,170.052841 32.550037,170.333450 33.132141,170.993408 
	C33.547192,171.566589 33.740921,171.640762 33.980667,171.595261 
	C34.076057,171.805557 34.171448,172.015854 34.376381,172.555740 
	C33.401295,172.520447 32.316673,172.155594 31.097954,171.455078 
z"/>
<path fill="#E4E39C" opacity="1.000000" stroke="none" 
	d="
M34.786301,173.215179 
	C35.407696,172.914978 36.259850,172.924240 37.552750,173.231537 
	C37.993496,173.529587 38.046402,173.949921 38.046402,173.949921 
	C38.046402,173.949921 37.992672,174.006165 37.965752,174.034225 
	C36.964905,173.883072 35.990986,173.703842 34.786301,173.215179 
z"/>
<path fill="#D5D292" opacity="1.000000" stroke="none" 
	d="
M205.357468,171.073059 
	C205.030655,170.905777 205.014786,170.686188 205.242096,170.073257 
	C205.827164,169.570312 206.169083,169.460693 206.655701,169.541718 
	C206.800385,169.732346 207.101166,170.104675 207.101166,170.104675 
	C206.623581,170.410034 206.146011,170.715393 205.357468,171.073059 
z"/>
<path fill="#0E1721" opacity="1.000000" stroke="none" 
	d="
M340.789398,125.066780 
	C340.811401,125.206718 340.617371,125.480728 340.206757,125.887535 
	C340.184570,125.747169 340.378998,125.474014 340.789398,125.066780 
z"/>
<path fill="#0E1721" opacity="1.000000" stroke="none" 
	d="
M337.197662,139.909760 
	C337.097809,139.704666 337.285950,139.447510 337.760162,139.138916 
	C337.887756,139.364609 337.700897,139.621353 337.197662,139.909760 
z"/>
<path fill="#D5D292" opacity="1.000000" stroke="none" 
	d="
M208.109314,169.103561 
	C207.934677,169.385269 207.760056,169.666977 207.343292,170.026672 
	C207.101166,170.104675 206.800385,169.732346 206.834167,169.415924 
	C207.091583,168.912888 207.314148,168.725037 207.678497,168.678406 
	C207.821335,168.820892 208.109299,169.103561 208.109314,169.103561 
z"/>
<path fill="#D5D292" opacity="1.000000" stroke="none" 
	d="
M208.928070,167.959290 
	C208.937210,168.384720 208.764053,168.665314 208.350098,169.024750 
	C208.109299,169.103561 207.821335,168.820892 207.823334,168.516327 
	C208.018906,167.995560 208.201309,167.770325 208.372543,167.536026 
	C208.372543,167.536026 208.745773,167.814468 208.928070,167.959290 
z"/>
<path fill="#F7C23D" opacity="1.000000" stroke="none" 
	d="
M208.480927,167.183365 
	C208.201309,167.770325 208.018906,167.995560 207.680496,168.373840 
	C207.314148,168.725037 207.091583,168.912888 206.689484,169.225281 
	C206.169083,169.460693 205.827164,169.570312 205.221405,169.743652 
	C197.276016,174.018036 188.895859,172.985779 180.669403,173.000183 
	C156.779068,173.042007 132.888641,173.026474 108.998306,173.066498 
	C107.191597,173.069519 105.385330,173.333191 103.215775,173.695221 
	C101.867592,173.899429 100.882507,173.884109 99.164360,173.671997 
	C92.565315,173.619415 86.699318,173.763611 80.833328,173.907806 
	C78.551018,173.895081 76.268707,173.882355 73.207642,173.677124 
	C68.963814,173.306717 65.498726,173.128830 62.033646,172.950928 
	C59.973869,169.396744 57.914093,165.842560 55.706505,161.658051 
	C55.637402,160.540634 55.716106,160.053513 55.754593,159.290710 
	C55.523781,158.704941 55.333183,158.394867 55.056465,157.621124 
	C54.837280,152.732513 54.704216,148.307571 54.571152,143.882629 
	C54.677517,138.997498 54.783878,134.112366 54.981419,128.357849 
	C57.893497,107.868340 66.241104,91.073006 80.678619,77.390327 
	C98.367943,62.588184 118.633949,55.730148 142.110901,57.613884 
	C161.385345,60.475258 177.625214,68.601639 191.500824,82.223892 
	C197.185394,91.804550 202.851349,101.063324 207.802780,110.689613 
	C209.620682,114.223877 209.748001,118.627708 210.571014,123.023376 
	C210.706085,125.897865 210.916611,128.383865 211.425018,131.121124 
	C211.751373,132.019531 211.779861,132.666672 211.869064,133.635101 
	C211.906281,141.285217 211.882797,148.614044 211.537354,156.541168 
	C210.931061,158.426895 210.646713,159.714355 210.362366,161.001801 
	C209.771347,162.944763 209.180328,164.887741 208.480927,167.183365 
z"/>
<path fill="#ED382B" opacity="1.000000" stroke="none" 
	d="
M80.319069,77.283653 
	C66.241104,91.073006 57.893497,107.868340 54.988785,127.912094 
	C43.086494,122.393738 39.003689,112.220840 40.130402,99.795853 
	C41.112663,88.963745 47.352436,81.546089 57.242722,77.204620 
	C64.793655,73.890030 72.383430,74.130913 80.319069,77.283653 
z"/>
<path fill="#734B2B" opacity="1.000000" stroke="none" 
	d="
M55.794807,159.566391 
	C55.716106,160.053513 55.637402,160.540634 55.630798,161.269043 
	C43.621246,162.904495 38.013023,157.979858 37.975262,145.945404 
	C37.969067,143.971390 37.956059,141.997421 38.004738,139.576019 
	C43.320770,140.709854 48.578270,142.291107 54.203461,143.877487 
	C54.704216,148.307571 54.837280,152.732513 55.052292,157.908081 
	C55.354431,158.961273 55.574619,159.263840 55.794807,159.566391 
z"/>
<path fill="#000000" opacity="1.000000" stroke="none" 
	d="
M439.700806,101.516785 
	C442.966064,101.247734 445.901550,101.087753 448.828796,100.832710 
	C458.879059,99.957031 461.378235,107.149750 462.843933,114.135422 
	C463.444214,116.996315 463.231842,120.126610 462.874756,123.071983 
	C461.486450,134.522049 447.907349,141.104752 438.003540,135.238159 
	C437.580078,134.987305 437.216949,134.630737 436.838196,134.308762 
	C428.924835,127.581856 430.514374,107.024994 439.700806,101.516785 
z"/>
<path fill="#D9D389" opacity="1.000000" stroke="none" 
	d="
M61.571041,172.991211 
	C65.498726,173.128830 68.963814,173.306717 72.780518,173.705521 
	C65.381577,173.954895 57.631016,173.983353 49.405674,173.984070 
	C52.990074,173.648071 57.049255,173.339767 61.571041,172.991211 
z"/>
<path fill="#D9D389" opacity="1.000000" stroke="none" 
	d="
M38.482758,173.968689 
	C38.046402,173.949921 37.993496,173.529587 37.970627,173.319580 
	C40.100029,173.249344 42.252308,173.389130 44.730598,173.746582 
	C43.010780,173.972000 40.964951,173.979721 38.482758,173.968689 
z"/>
<path fill="#F7C23D" opacity="1.000000" stroke="none" 
	d="
M28.049841,164.865265 
	C27.334873,164.541702 26.834538,164.033325 26.306337,163.251923 
	C26.940474,163.546082 27.602474,164.113251 28.049841,164.865265 
z"/>
<path fill="#F7C23D" opacity="1.000000" stroke="none" 
	d="
M25.839855,160.952454 
	C25.551460,160.727127 25.288130,160.193726 25.059822,159.357651 
	C25.351536,159.584778 25.608229,160.114578 25.839855,160.952454 
z"/>
<path fill="#F7C23D" opacity="1.000000" stroke="none" 
	d="
M33.879436,171.492554 
	C33.740921,171.640762 33.547192,171.566589 33.354389,171.218445 
	C33.483269,171.147278 33.639572,171.255844 33.879436,171.492554 
z"/>
<path fill="#F7C23D" opacity="1.000000" stroke="none" 
	d="
M31.807119,169.616974 
	C31.920509,169.772217 31.472076,169.902542 31.243351,169.948807 
	C31.014624,169.995071 30.985216,169.537735 31.007385,169.310486 
	C31.288061,169.144348 31.509455,169.270508 31.807119,169.616974 
z"/>
<path fill="#F7C23D" opacity="1.000000" stroke="none" 
	d="
M30.815866,168.766968 
	C30.600567,168.916946 30.352587,168.763580 30.091682,168.291840 
	C30.298653,168.170563 30.533461,168.333939 30.815866,168.766968 
z"/>
<path fill="#F7C23D" opacity="1.000000" stroke="none" 
	d="
M28.845818,166.725922 
	C28.644260,166.859268 28.409939,166.715714 28.182274,166.268967 
	C28.380257,166.169479 28.588297,166.330551 28.845818,166.725922 
z"/>
<path fill="#D9D389" opacity="1.000000" stroke="none" 
	d="
M81.316055,173.943298 
	C86.699318,173.763611 92.565315,173.619415 98.793282,173.699036 
	C93.369766,173.941498 87.584274,173.960144 81.316055,173.943298 
z"/>
<path fill="#D9D389" opacity="1.000000" stroke="none" 
	d="
M210.633957,160.905273 
	C210.646713,159.714355 210.931061,158.426895 211.528259,157.001007 
	C211.919342,157.303757 211.997589,157.744949 212.086700,158.519852 
	C211.700241,159.505295 211.302887,160.157028 210.633957,160.905273 
z"/>
<path fill="#F8AE32" opacity="1.000000" stroke="none" 
	d="
M55.754593,159.290710 
	C55.574619,159.263840 55.354431,158.961273 55.138412,158.371765 
	C55.333183,158.394867 55.523781,158.704941 55.754593,159.290710 
z"/>
      </g>
    </SvgIcon>
  );
}

const { CONNECT_WALLET,CONNECTION_DISCONNECTED, ACCOUNT_CONFIGURED, ACCOUNT_CHANGED, FIXED_FOREX_BALANCES_RETURNED, FIXED_FOREX_CLAIM_VECLAIM, FIXED_FOREX_VECLAIM_CLAIMED, FIXED_FOREX_UPDATED, ERROR } = ACTIONS

function WrongNetworkIcon(props) {
  const { color, className } = props;
  return (
    <SvgIcon viewBox="0 0 64 64" strokeWidth="1" className={className}>
      <g strokeWidth="2" transform="translate(0, 0)"><path fill="none" stroke="#ffffff" strokeWidth="2" strokeLinecap="square" strokeMiterlimit="10" d="M33.994,42.339 C36.327,43.161,38,45.385,38,48c0,3.314-2.686,6-6,6c-2.615,0-4.839-1.673-5.661-4.006" strokeLinejoin="miter"></path> <path fill="none" stroke="#ffffff" strokeWidth="2" strokeLinecap="square" strokeMiterlimit="10" d="M47.556,32.444 C43.575,28.462,38.075,26,32,26c-6.075,0-11.575,2.462-15.556,6.444" strokeLinejoin="miter"></path> <path fill="none" stroke="#ffffff" strokeWidth="2" strokeLinecap="square" strokeMiterlimit="10" d="M59.224,21.276 C52.256,14.309,42.632,10,32,10c-10.631,0-20.256,4.309-27.224,11.276" strokeLinejoin="miter"></path> <line data-color="color-2" fill="none" stroke="#ffffff" strokeWidth="2" strokeLinecap="square" strokeMiterlimit="10" x1="10" y1="54" x2="58" y2="6" strokeLinejoin="miter"></line></g>
      </SvgIcon>
  );
}

const StyledMenu = withStyles({
  paper: {
    border: '1px solid rgba(126,153,176,0.2)',
    marginTop: '10px',
    minWidth: '230px',
  },
})((props) => (
  <Menu
    elevation={0}
    getContentAnchorEl={null}
    anchorOrigin={{
      vertical: 'bottom',
      horizontal: 'right',
    }}
    transformOrigin={{
      vertical: 'top',
      horizontal: 'right',
    }}
    {...props}
  />
));

const StyledMenuItem = withStyles((theme) => ({
  root: {
    '&:focus': {
      backgroundColor: 'none',
      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {
        color: '#FFF',
      },
    },
  },
}))(MenuItem);


const StyledSwitch = withStyles((theme) => ({
  root: {
    width: 45,
    height: 26,
    padding: 0,
    margin: theme.spacing(1),
  },
  switchBase: {
    paddingTop: 1.5,
    width: '70%',
    margin: 'auto',
    borderRadius: '20px',
    '&$checked': {
      paddingTop: '6px',
      transform: 'translateX(18px)',
      color: 'rgba(128,128,128, 1)',
      width: '25px',
      height: '25px',
      '& + $track': {
        backgroundColor: 'rgba(0,0,0, 0.3)',
        opacity: 1,
      },
    },
    '&$focusVisible $thumb': {
      color: '#ffffff',
      border: '6px solid #fff',
    },
  },
  track: {
    borderRadius: 32 / 2,
    border: '1px solid rgba(104,108,122, 0.25)',
    backgroundColor: 'rgba(0,0,0, 0)',
    opacity: 1,
    transition: theme.transitions.create(['background-color', 'border']),
  },
  checked: {},
  focusVisible: {},
}))(({ classes, ...props }) => {
  return (
    <Switch
      focusVisibleClassName={classes.focusVisible}
      disableRipple
      classes={{
        root: classes.root,
        switchBase: classes.switchBase,
        thumb: classes.thumb,
        track: classes.track,
        checked: classes.checked,
      }}
      {...props}
    />
  );
});


const StyledBadge = withStyles((theme) => ({
  badge: {
    background: '#06D3D7',
    color: '#000'
  },
}))(Badge);

function Header(props) {

  const accountStore = stores.accountStore.getStore('account');
  const router = useRouter();

  const [account, setAccount] = useState(accountStore);
  const [darkMode, setDarkMode] = useState(props.theme.palette.type === 'dark' ? true : false);
  const [unlockOpen, setUnlockOpen] = useState(false);
  const [chainInvalid, setChainInvalid] = useState(false)
  const [loading, setLoading] = useState(false)
  const [transactionQueueLength, setTransactionQueueLength] = useState(0)

  useEffect(() => {
    const accountConfigure = () => {
      const accountStore = stores.accountStore.getStore('account');
      setAccount(accountStore);
      closeUnlock();
    };
    const connectWallet = () => {
      onAddressClicked();
    };
    const accountChanged = () => {
      const invalid = stores.accountStore.getStore('chainInvalid');
      setChainInvalid(invalid)
    }

    const invalid = stores.accountStore.getStore('chainInvalid');
    setChainInvalid(invalid)

    stores.emitter.on(ACCOUNT_CONFIGURED, accountConfigure);
    stores.emitter.on(CONNECT_WALLET, connectWallet);
    stores.emitter.on(ACCOUNT_CHANGED, accountChanged);
    return () => {
      stores.emitter.removeListener(ACCOUNT_CONFIGURED, accountConfigure);
      stores.emitter.removeListener(CONNECT_WALLET, connectWallet);
      stores.emitter.removeListener(ACCOUNT_CHANGED, accountChanged);
    };
  }, []);

  const handleToggleChange = (event, val) => {
    setDarkMode(val);
    props.changeTheme(val);
  };

  const onAddressClicked = () => {
    setUnlockOpen(true);
  };

  const closeUnlock = () => {
    setUnlockOpen(false);
  };

  useEffect(function () {
    const localStorageDarkMode = window.localStorage.getItem('yearn.finance-dark-mode');
    setDarkMode(localStorageDarkMode ? localStorageDarkMode === 'dark' : false);
  }, []);

  const navigate = (url) => {
    router.push(url)
  }

  const callClaim = () => {
    setLoading(true)
    stores.dispatcher.dispatch({ type: FIXED_FOREX_CLAIM_VECLAIM, content: {} })
  }

  const switchChain = async () => {
    let hexChain = '0x'+Number(process.env.NEXT_PUBLIC_CHAINID).toString(16)
    try {
      await window.ethereum.request({
        method: 'wallet_switchEthereumChain',
        params: [{ chainId: hexChain }],
      });
    } catch (switchError) {
      console.log("switch error",switchError)
    }
  }

  const setQueueLength = (length) => {
    setTransactionQueueLength(length)
  }

  const [anchorEl, setAnchorEl] = React.useState(null);

  const handleClick = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  return (
    <div>
      <div className={classes.headerContainer}>

        <div className={classes.logoContainer}>
          <a onClick={() => router.push('/home')}>
            {/*<SiteLogo className={classes.appLogo} />*/}
            <image alt="logo" className='appLogo1 appLogo'/>
          </a>
          <Typography className={ classes.version}>version 0.0.1</Typography>
        </div>

        <Navigation changeTheme={props.changeTheme} />

        <div style={{ width: '260px', display: 'flex', justifyContent: 'flex-end' }}>

          { process.env.NEXT_PUBLIC_CHAINID == '5' &&
            <div className={ classes.testnetDisclaimer}>
              <Typography className={ classes.testnetDisclaimerText}>Testnet</Typography>
            </div>
          }

          { transactionQueueLength > 0 &&
            <IconButton
              className={classes.accountButton}
              variant="contained"
              color={props.theme.palette.type === 'dark' ? 'primary' : 'secondary'}
              onClick={ () => {
                  stores.emitter.emit(ACTIONS.TX_OPEN)
                }
              }>
              <StyledBadge badgeContent={transactionQueueLength} color="secondary" overlap="circular" >
                <ListIcon className={ classes.iconColor}/>
              </StyledBadge>
            </IconButton>
          }

          {account && account.address ?
          <div>
          <Button
            disableElevation
            className={classes.accountButton}
            variant="contained"
            color={props.theme.palette.type === 'dark' ? 'primary' : 'secondary'}
             aria-controls="simple-menu" aria-haspopup="true" onClick={handleClick}>
            {account && account.address && <div className={`${classes.accountIcon} ${classes.metamask}`}></div>}
            <Typography className={classes.headBtnTxt}>{account && account.address ? formatAddress(account.address) : 'Connect Wallet'}</Typography>
            <ArrowDropDownIcon className={classes.ddIcon} />
          </Button>

          <StyledMenu
            id="customized-menu"
            anchorEl={anchorEl}
            keepMounted
            open={Boolean(anchorEl)}
            onClose={handleClose}
            className={classes.userMenu}
          >
            <StyledMenuItem className={classes.hidden} onClick={() => router.push('/dashboard')}>
              <ListItemIcon className={classes.userMenuIcon}>
                <DashboardOutlinedIcon fontSize="small" />
              </ListItemIcon>
              <ListItemText className={classes.userMenuText} primary="Dashboard" />
            </StyledMenuItem>
            <StyledMenuItem onClick={onAddressClicked}>
              <ListItemIcon className={classes.userMenuIcon}>
                <AccountBalanceWalletOutlinedIcon fontSize="small" />
              </ListItemIcon>
              <ListItemText className={classes.userMenuText} primary="Switch Wallet Provider" />
            </StyledMenuItem>
          </StyledMenu>
          </div>
          :
          <Button
            disableElevation
            className={classes.accountButton}
            variant="contained"
            color={props.theme.palette.type === 'dark' ? 'primary' : 'secondary'}
            onClick={onAddressClicked}>
            {account && account.address && <div className={`${classes.accountIcon} ${classes.metamask}`}></div>}
            <Typography className={classes.headBtnTxt}>{account && account.address ? formatAddress(account.address) : 'Connect Wallet'}</Typography>
          </Button>
          }

        </div>
        {unlockOpen && <Unlock modalOpen={unlockOpen} closeModal={closeUnlock} />}
        <TransactionQueue setQueueLength={ setQueueLength } />
    </div>
    {chainInvalid ? (
      <div className={classes.chainInvalidError}>
        <div className={classes.ErrorContent}>
          <WrongNetworkIcon className={ classes.networkIcon } />
          <Typography className={classes.ErrorTxt}>
            The chain you're connected to isn't supported. Please check that your wallet is connected to Goerli Testnet Mainnet.
          </Typography>
          <Button className={classes.switchNetworkBtn} variant="contained" onClick={()=>switchChain()} >Switch to { process.env.NEXT_PUBLIC_CHAINID == '4002' ? 'Fantom Testnet' : 'Goerli' }</Button>
        </div>
      </div>
    ) : null}
    </div>
  );
}

export default withTheme(Header);
